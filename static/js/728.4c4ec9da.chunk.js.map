{"version":3,"file":"static/js/728.4c4ec9da.chunk.js","mappings":"6OAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2B,GAIVF,EAAAA,GAAAA,MAAYG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,+E,gDCCpBE,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACvBC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAe3B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,MAAMC,SAAS,KAAKC,MAAO,CAAED,SAAU,KAAME,UAChEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,gBAAiB,QACjBC,QAAS,OACTC,UAAW,mCACXV,SAAA,EAEFL,EAAAA,EAAAA,KAAA,MAAII,MAAO,CAAEY,UAAW,SAAUC,WAAY,aAAcZ,SAAC,aAG7DC,EAAAA,EAAAA,MAACnB,EAAI,CACH+B,SA9Ba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACf5B,EAAO,CACL6B,KAAMF,EAAKG,SAASD,KAAKE,MACzBC,MAAOL,EAAKG,SAASE,MAAMD,MAC3BE,SAAUN,EAAKG,SAASG,SAASF,QAE9B9B,GAAwB,OAAXG,GAChBuB,EAAKO,OAET,EAoBQC,aAAa,MACbzB,MAAO,CAAE0B,MAAO,QAASzB,SAAA,EAEzBL,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,WAAS,EACTC,MAAM,OACNb,KAAK,OACLM,aAAa,OACbQ,KAAK,OACLC,QAAQ,cAEVtC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTE,MAAM,QACNb,KAAK,QACLM,aAAa,QACbQ,KAAK,QACLC,QAAQ,cAEVtC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTX,KAAK,WACLa,MAAM,WACNC,KAAK,WACLR,aAAa,mBACbS,QAAQ,aAET3C,GACCK,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACD,QAAQ,YAAYJ,WAAS,EAAC9B,MAAO,CAAEK,UAAW,IAAKJ,UAC7DL,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,OAAQ,GAAIC,OAAO,YAG3B1C,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CACLF,KAAK,SACLH,WAAS,EACTI,QAAQ,YACRlC,MAAO,CAAEK,UAAW,IAAKJ,SAC1B,oBAQb,E,8BCtFe,SAASsC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACX/C,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,KAE3B+C,EAAAA,EAAAA,YAAU,WACO,wCAAXhD,IACFiD,EAAAA,GAAAA,QACE,6DAEFH,GAASI,EAAAA,EAAAA,OAEb,GAAG,CAAClD,EAAQ8C,IAMZ,OACEtC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,kBAEPL,EAAAA,EAAAA,KAACR,EAAY,CAACE,OARC,SAAAuD,GACjBL,GAASM,EAAAA,EAAAA,IAASD,GACpB,MASF,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n","import { Puff } from 'react-loading-icons';\nimport { useSelector } from 'react-redux';\nimport { selectAuthIsLoading, selectAuthError } from 'redux/auth/selectors';\n\nimport { Form } from './RegisterForm.styled';\nimport { Button, TextField, Box, Container } from '@mui/material';\n\nexport const RegisterForm = ({ onData }) => {\n  const isLoading = useSelector(selectAuthIsLoading);\n  const status = useSelector(selectAuthError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    onData({\n      name: form.elements.name.value,\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    });\n    if (!isLoading && status !== null) {\n      form.reset();\n    }\n  };\n\n  return (\n    <Container component=\"div\" maxWidth=\"xs\" style={{ maxWidth: 440 }}>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          backgroundColor: 'white',\n          padding: '20px',\n          boxShadow: '0px 2px 10px 1px rgb(33 33 33) ',\n        }}\n      >\n        <h1 style={{ textAlign: 'center', fontFamily: 'monospace' }}>\n          Sign Up\n        </h1>\n        <Form\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n          style={{ width: '100%' }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            autoFocus\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            type=\"text\"\n            variant=\"standard\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            type=\"email\"\n            variant=\"standard\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"standard\"\n          />\n          {isLoading ? (\n            <Button variant=\"contained\" fullWidth style={{ marginTop: 30 }}>\n              <Puff height={22} stroke=\"#fff\" />\n            </Button>\n          ) : (\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              style={{ marginTop: 30 }}\n            >\n              Register\n            </Button>\n          )}\n        </Form>\n      </Box>\n    </Container>\n  );\n};","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport toast from 'react-hot-toast';\nimport { useSelector } from 'react-redux';\nimport { selectAuthError } from 'redux/auth/selectors';\nimport { useDispatch } from 'react-redux';\nimport { register, clearAuthError } from 'redux/auth/operations';\nimport { useEffect } from 'react';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const status = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (status === 'Request failed with status code 400') {\n      toast.success(\n        'You or someone else is already registered with such data!'\n      );\n      dispatch(clearAuthError());\n    }\n  }, [status, dispatch]);\n\n  const onRegister = data => {\n    dispatch(register(data));\n  };\n\n  return (\n    <div>\n      <title>Registration</title>\n\n      <RegisterForm onData={onRegister} />\n    </div>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","RegisterForm","_ref","onData","isLoading","useSelector","selectAuthIsLoading","status","selectAuthError","_jsx","Container","component","maxWidth","style","children","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","backgroundColor","padding","boxShadow","textAlign","fontFamily","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","email","password","reset","autoComplete","width","TextField","margin","required","fullWidth","autoFocus","label","type","variant","Button","Puff","height","stroke","Register","dispatch","useDispatch","useEffect","toast","clearAuthError","data","register"],"sourceRoot":""}